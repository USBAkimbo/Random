version: '3.8'

# Connect to reverse proxy network
networks:
  proxy:
    external: true

services:
  # VPN container
  # All containers force their network traffic through this container
  gluetun:
    container_name: gluetun
    image: qmcgaw/gluetun
    restart: always
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - FIREWALL_OUTBOUND_SUBNETS=10.10.4.0/24
      - FIREWALL_OUTBOUND_SUBNETS=10.10.3.0/24
      - FIREWALL_VPN_INPUT_PORTS=$FIREWALL_VPN_INPUT_PORTS
      - VPNSP=mullvad
      - VPN_TYPE=wireguard
      - SERVER_CITIES=$SERVER_CITIES
      - WIREGUARD_PRIVATE_KEY=$WIREGUARD_PRIVATE_KEY
      - WIREGUARD_ADDRESSES=$WIREGUARD_ADDRESSES
    volumes:
      - /opt/dockervolumes/gluetun:/gluetun
    labels:
      # Disable auto updates (done through daily compose file update)
      - com.centurylinklabs.watchtower.enable=false
      # Enable Traefik reverse proxy
      - traefik.enable=true
      # Sonarr
      - traefik.http.routers.sonarr.rule=Host(`sonarr.$DOMAIN`)
      - traefik.http.routers.sonarr.entrypoints=websecure
      - traefik.http.routers.sonarr.tls.certresolver=cloudflare
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      - traefik.http.routers.sonarr.service=sonarr
      # Radarr
      - traefik.http.routers.radarr.rule=Host(`radarr.$DOMAIN`)
      - traefik.http.routers.radarr.entrypoints=websecure
      - traefik.http.routers.radarr.tls.certresolver=cloudflare
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      - traefik.http.routers.radarr.service=radarr
      # Prowlarr
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.$DOMAIN`)
      - traefik.http.routers.prowlarr.entrypoints=websecure
      - traefik.http.routers.prowlarr.tls.certresolver=cloudflare
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696
      - traefik.http.routers.prowlarr.service=prowlarr
      # Deluge
      - traefik.http.routers.deluge.rule=Host(`deluge.$DOMAIN`)
      - traefik.http.routers.deluge.entrypoints=websecure
      - traefik.http.routers.deluge.tls.certresolver=cloudflare
      - traefik.http.services.deluge.loadbalancer.server.port=8112
      - traefik.http.routers.deluge.service=deluge
      # Bazarr
      - traefik.http.routers.bazarr.rule=Host(`bazarr.$DOMAIN`)
      - traefik.http.routers.bazarr.entrypoints=websecure
      - traefik.http.routers.bazarr.tls.certresolver=cloudflare
      - traefik.http.services.bazarr.loadbalancer.server.port=6767
      - traefik.http.routers.bazarr.service=bazarr
      # SABnzbd
      - traefik.http.routers.sabnzbd.rule=Host(`sabnzbd.$DOMAIN`)
      - traefik.http.routers.sabnzbd.entrypoints=websecure
      - traefik.http.routers.sabnzbd.tls.certresolver=cloudflare
      - traefik.http.services.sabnzbd.loadbalancer.server.port=8080
      - traefik.http.routers.sabnzbd.service=sabnzbd
    ports:
      # Host:Container/tcp|udp
      # If not specified it will be TCP
      # Sonarr
      - 8989:8989
      # Radarr
      - 7878:7878
      # Prowlarr
      - 9696:9696
      # Deluge
      - 8112:8112
      # Bazarr
      - 6767:6767
      # SABnzbd
      - 8686:8080
      # Add more ports here as needed
    networks:
      - proxy

  sonarr:
    container_name: sonarr
    image: lscr.io/linuxserver/sonarr
    restart: always
    network_mode: service:gluetun
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /opt/dockervolumes/sonarr/config:/config
      - /mnt/storage/tv:/tv
      - /mnt/storage/downloads:/downloads
    labels:
      - com.centurylinklabs.watchtower.enable=false

  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr
    restart: always
    network_mode: service:gluetun
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /opt/dockervolumes/radarr/config:/config
      - /mnt/storage/films:/movies
      - /mnt/storage/downloads:/downloads
    labels:
      - com.centurylinklabs.watchtower.enable=false

  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:develop
    restart: always
    network_mode: service:gluetun
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /opt/dockervolumes/prowlarr/config:/config
    labels:
      - com.centurylinklabs.watchtower.enable=false

  deluge:
    container_name: deluge
    image: lscr.io/linuxserver/deluge
    restart: always
    network_mode: service:gluetun
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /opt/dockervolumes/deluge/config:/config
      - /mnt/storage/downloads:/downloads
    labels:
      - com.centurylinklabs.watchtower.enable=false

  bazarr:
    container_name: bazarr
    image: lscr.io/linuxserver/bazarr
    restart: always
    network_mode: service:gluetun
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /opt/dockervolumes/bazarr/config:/config
      - /mnt/storage/tv:/tv
      - /mnt/storage/films:/movies
    labels:
      - com.centurylinklabs.watchtower.enable=false

  sabnzbd:
    container_name: sabnzbd
    image: lscr.io/linuxserver/sabnzbd
    restart: always
    network_mode: service:gluetun
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /opt/dockervolumes/sabnzbd/config:/config
      - /mnt/storage/downloads:/downloads
      - /mnt/storage/incomplete-downloads:/incomplete-downloads
    labels:
      - com.centurylinklabs.watchtower.enable=false