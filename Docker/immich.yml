version: "3.8"

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:release
    command: ["start-server.sh"]
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
    env_file:
      - stack.env
    depends_on:
      - redis
      - database
    restart: always
    networks:
      - proxy
    labels:
      - com.centurylinklabs.watchtower.enable=false
      - traefik.enable=true
      - traefik.http.routers.immich.rule=Host(`immich.${DOMAIN}`)
      - traefik.http.routers.immich.entrypoints=websecure
      - traefik.http.routers.immich.tls.certresolver=cloudflare
      - traefik.http.services.immich.loadbalancer.server.port=3001
      - traefik.http.routers.immich.service=immich

  immich-microservices:
    container_name: immich_microservices
    image: ghcr.io/immich-app/immich-server:release
    deploy:
      resources:
        limits:
          cpus: "2"
    command: ["start-microservices.sh"]
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /mnt/ssd/immich/import/katie:/exifprocess
    env_file:
      - stack.env
    depends_on:
      - redis
      - database
    restart: always
    networks:
      - proxy
    labels:
      - com.centurylinklabs.watchtower.enable=false

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:release
    deploy:
      resources:
        limits:
          cpus: "2"
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - ${IMMICH_DATA_PATH}/model-cache:/cache
    env_file:
      - stack.env
    restart: always
    networks:
      - proxy
    labels:
      - com.centurylinklabs.watchtower.enable=false

  redis:
    container_name: immich_redis
    image: redis:6.2
    restart: always
    networks:
      - proxy
    labels:
      - com.centurylinklabs.watchtower.enable=false

  database:
    container_name: immich_postgres
    image: tensorchord/pgvecto-rs:pg14-v0.1.11
    env_file:
      - stack.env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - ${IMMICH_DATA_PATH}/pgdata:/var/lib/postgresql/data
    restart: always
    networks:
      - proxy
    labels:
      - com.centurylinklabs.watchtower.enable=false

networks:
  proxy:
    external: true